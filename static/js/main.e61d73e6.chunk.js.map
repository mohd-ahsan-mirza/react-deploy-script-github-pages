{"version":3,"sources":["components/Manipulator.js","App.js","serviceWorker.js","index.js"],"names":["Manipulator","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","originalList","manipulatedList","originalListArray","manipulatedlistArray","notSelected","isSelected","options","push","id","option","selected","button","react_default","a","createElement","key","type","className","onClick","updateButtonProperties","newList","newListString","setState","filter","selectedOption","length","run","value","setManipulatedList","index","lastIndexOf","substring","addDoubleQuotesAroundListElements","addSingleQuotesAroundListElements","addCommaBetweenListElements","addOpenParenthesinListELements","addCloseParenthesinListELements","addCloseParenthesAndCommaInListELements","appendFiveZerostoListElements","resetManipulatedList","number","Math","floor","random","newString","manipulateList","thisOption","find","optionIndex","findIndex","$","attr","_this2","map","renderOption","event","preventDefault","target","newArray","split","el","_this3","onChange","updateOriginalList","rows","renderOptions","reset","demo","readOnly","Component","App","manipulator","components_Manipulator","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e61d73e6.chunk.js","sourcesContent":["import React,{Component} from 'react';\nimport $ from 'jquery';\n\nclass Manipulator extends Component{\n    constructor(props){\n        super(props); \n\n        this.state = {\n            originalList : \"\",\n            manipulatedList : \"\",\n        };\n\n        this.originalListArray = [];\n        this.manipulatedlistArray = [];\n\n        this.notSelected = 'btn btn-info';\n        this.isSelected = 'btn btn-danger';\n\n\n        this.options = [];\n        this.options.push({id:\"1\", option:'\"',selected:false,button:<button id='button1' key=\"1\" type='button' className={this.notSelected} onClick={() => this.updateButtonProperties(\"1\")}>\"\"</button>});\n        this.options.push({id:\"2\", option:\"'\",selected:false,button:<button id='button2' key=\"2\" type='button' className={this.notSelected} onClick={() => this.updateButtonProperties(\"2\")}>''</button>});\n        this.options.push({id:\"3\", option:\",\",selected:false,button:<button id='button3' key=\"3\" type='button' className={this.notSelected} onClick={() => this.updateButtonProperties(\"3\")}>,</button>});\n        this.options.push({id:\"4\", option:\"(\",selected:false,button:<button id='button4' key=\"4\" type='button' className={this.notSelected} onClick={() => this.updateButtonProperties(\"4\")}>(</button>});\n        this.options.push({id:\"5\", option:\")\",selected:false,button:<button id='button5' key=\"5\" type='button' className={this.notSelected} onClick={() => this.updateButtonProperties(\"5\")}>)</button>});\n        this.options.push({id:\"6\", option:\"),\",selected:false,button:<button id='button6' key=\"6\" type='button' className={this.notSelected} onClick={() => this.updateButtonProperties(\"6\")}>),</button>});\n        this.options.push({id:\"7\", option:\"00000+\",selected:false,button:<button id='button7' key=\"7\" type='button' className={this.notSelected} onClick={() => this.updateButtonProperties(\"7\")}>00000+</button>});\n        //Add option here\n    }\n\n    setManipulatedList(newList,newListString){\n        this.manipulatedlistArray = newList;\n        this.setState({\n            manipulatedList : newListString,\n        });\n    }\n\n    //TODO: Add options for multiple values in one line\n\n    addDoubleQuotesAroundListElements(){\n        var newListString = \"\";\n        var selectedOption = this.options.filter(selectedOption => selectedOption.id === \"1\" && selectedOption.selected === true);\n        var newList = [];\n        if(selectedOption.length!==0){\n            for(var run=0;run<this.manipulatedlistArray.length;run++){\n                var value = '\"'+this.manipulatedlistArray[run]+'\"';\n                newList.push(value);\n                newListString = newListString+value+\"\\r\\n\";\n            }\n            this.setManipulatedList(newList,newListString)\n        }\n    }\n\n    addSingleQuotesAroundListElements(){\n        var newListString = \"\";\n        var selectedOption = this.options.filter(selectedOption => selectedOption.id === \"2\" && selectedOption.selected === true);\n        var newList = [];\n        if(selectedOption.length!==0){\n            for(var run=0;run<this.manipulatedlistArray.length;run++){\n                var value = \"'\"+this.manipulatedlistArray[run]+\"'\";\n                newList.push(value);\n                newListString = newListString+value+\"\\r\\n\";\n            }\n            this.setManipulatedList(newList,newListString)\n        }\n    }\n\n    addCommaBetweenListElements(){\n        var newListString = \"\";\n        var selectedOption = this.options.filter(selectedOption => selectedOption.id === \"3\" && selectedOption.selected === true);\n        var newList = [];\n        if(selectedOption.length!==0){\n            for(var run=0;run<this.manipulatedlistArray.length;run++){\n                var value = this.manipulatedlistArray[run]+\",\";\n                newList.push(value);\n                newListString = newListString+value+\"\\r\\n\";\n            }\n            var index=newListString.lastIndexOf(\",\");\n            newListString=newListString.substring(0,index) \n            this.setManipulatedList(newList,newListString)\n        }\n    }\n\n    addOpenParenthesinListELements(){\n        var newListString = \"\";\n        var selectedOption = this.options.filter(selectedOption => selectedOption.id === \"4\" && selectedOption.selected === true);\n        var newList = [];\n        if(selectedOption.length!==0){\n            for(var run=0;run<this.manipulatedlistArray.length;run++){\n                var value = \"(\"+this.manipulatedlistArray[run];\n                newList.push(value);\n                newListString = newListString+value+\"\\r\\n\";\n            }\n            this.setManipulatedList(newList,newListString)\n        }\n    }\n\n    addCloseParenthesinListELements(){\n        var newListString = \"\";\n        var selectedOption = this.options.filter(selectedOption => selectedOption.id === \"5\" && selectedOption.selected === true);\n        var newList = [];\n        if(selectedOption.length!==0){\n            for(var run=0;run<this.manipulatedlistArray.length;run++){\n                var value = this.manipulatedlistArray[run]+\")\";\n                newList.push(value);\n                newListString = newListString+value+\"\\r\\n\";\n            }\n            this.setManipulatedList(newList,newListString)\n        }\n    }\n\n    addCloseParenthesAndCommaInListELements(){\n        var newListString = \"\";\n        var selectedOption = this.options.filter(selectedOption => selectedOption.id === \"6\" && selectedOption.selected === true);\n        var newList = [];\n        if(selectedOption.length!==0){\n            for(var run=0;run<this.manipulatedlistArray.length;run++){\n                var value = this.manipulatedlistArray[run]+\"),\";\n                newList.push(value);\n                newListString = newListString+value+\"\\r\\n\";\n            }\n            this.setManipulatedList(newList,newListString)\n        }\n    }\n\n    appendFiveZerostoListElements(){\n        var newListString = \"\";\n        var selectedOption = this.options.filter(selectedOption => selectedOption.id === \"7\" && selectedOption.selected === true);\n        var newList = [];\n        if(selectedOption.length!==0){\n            for(var run=0;run<this.manipulatedlistArray.length;run++){\n                var value = \"00000\"+this.manipulatedlistArray[run];\n                newList.push(value);\n                newListString = newListString+value+\"\\r\\n\";\n            }\n            this.setManipulatedList(newList,newListString)\n        }\n    }\n\n    //Add option function\n\n    manipulateList(){\n        this.manipulatedlistArray = this.originalListArray;\n        this.addDoubleQuotesAroundListElements();\n        this.addSingleQuotesAroundListElements();\n        this.addCommaBetweenListElements();\n        this.addOpenParenthesinListELements();\n        this.addCloseParenthesinListELements();\n        this.addCloseParenthesAndCommaInListELements();\n        this.appendFiveZerostoListElements();\n        //Call option function\n    }\n\n    resetManipulatedList(){\n        this.manipulatedlistArray = [];\n        this.setState({\n            manipulatedList : \"\",\n        });\n    }\n\n    reset(){\n        this.originalListArray = [];\n        this.setState({\n            originalList : \"\",\n        });\n        this.resetManipulatedList();\n    }\n\n    demo(){\n        var number = Math.floor((Math.random() * 100) + 1);\n        this.originalListArray.push(number);\n        var newString = \"\";\n        if(this.state.originalList.length!==0)\n            newString = this.state.originalList+\"\\n\";\n        this.setState({\n            originalList : newString+number\n        });\n        if(this.options.filter(selectedOption => selectedOption.selected === true).length !== 0)\n            this.manipulateList();\n    }\n\n    updateButtonProperties(thisOption){\n        var option = this.options.find(option => option.id === thisOption);\n        var optionIndex = this.options.findIndex(option => option.id === thisOption);\n        if(option.selected){\n            option.selected = false;\n            $(\"#\"+option.button.props.id).attr(\"class\",this.notSelected);\n        }else{\n            option.selected = true;\n            $(\"#\"+option.button.props.id).attr(\"class\",this.isSelected);\n        }\n        this.options[optionIndex] = option;\n        this.setState(this.options);\n        if(this.options.filter(selectedOption => selectedOption.selected === true).length !== 0)\n            this.manipulateList();\n        else\n            this.resetManipulatedList();\n    }\n\n    renderOption(option){\n        return <div className=\"row mb-4\">\n                    <div className=\"col text-center\">\n                        {option.button}\n                    </div>\n                </div>\n    }\n\n    renderOptions(){\n        return (\n            this.options.map(option => {return this.renderOption(option);\n        }));\n    }\n\n    updateOriginalList(event) {\n        event.preventDefault();\n        this.setState({\n            originalList : event.target.value,\n        });\n        if(this.state.originalList.length==0){\n            var newArray = event.target.value.split(\"\\n\");\n            this.originalListArray = newArray;\n        }else{\n            this.originalListArray = this.state.originalList.split(\"\\n\");\n        }\n        this.originalListArray = this.originalListArray.filter(function (el) {\n            return el != \"\";\n        });\n        this.manipulateList();\n    }\n\n    render(){\n        return <form className=\"row\">\n                    <div className=\"form-group col-lg-4 col-md-4 col-sm-12\">\n                        <h4 className=\"text-center col-lg-12 col-md-12 col-sm-12\">Original List</h4>\n                        <textarea value={this.state.originalList} onChange={(event) => this.updateOriginalList(event)} className=\"form-control col-lg-12 col-md-12 col-sm-12\" rows=\"20\"></textarea>\n                    </div>\n                    <div className=\"form-group col-lg-4 col-md-4 col-sm-12\">\n                        <h4 className=\"text-center col-lg-12 col-md-12 col-sm-12 mb-4\">Options</h4>\n                        {this.renderOptions()}\n                        <div className=\"row mb-4\"><div className=\"col text-center\"><button type='button' className='btn btn-success' onClick={() => this.reset()}>RESET</button></div></div>\n                        <div className=\"row mb-4\"><div className=\"col text-center\"><button type='button' className='btn btn-warning' onClick={() => this.demo()}>DEMO</button></div></div>\n                    </div>\n                    <div className=\"form-group col-lg-4 col-md-4 col-sm-12\">\n                        <h4 className=\"text-center col-lg-12 col-md-12 col-sm-12\">Result</h4>\n                        <textarea value={this.state.manipulatedList} className=\"form-control col-lg-12 col-md-12 col-sm-12\" rows=\"20\" readOnly></textarea>\n                    </div>\n                </form>\n    }\n}\n\nexport default Manipulator;","import React, { Component } from 'react';\nimport './App.css';\nimport Manipulator from './components/Manipulator'\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.manipulator = new Manipulator(); \n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h2 className=\"text-center\">Manipulate List</h2>\n          <Manipulator />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}